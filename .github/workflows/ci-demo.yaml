name: Node.js CI
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: 
  push:
    branches: [ action-ci ]
jobs:
  Build-CI:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          path: "./"
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      ## Preparation ##
      # - uses: actions/checkout@v3
      ## get properties ##
      - name: get properties
        id: json_properties
        run: |
          content=`cat ./package.json`
          echo ${content}
          # the following lines are only required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          #echo "::set-output name=packageJson::$content"
          echo ${content}
          echo "packageJson=${content}" >> $GITHUB_OUTPUT
      - run: |
          echo "${{ steps.json_properties.outputs.name }}"
          echo "${{fromJson(steps.json_properties.outputs.packageJson).version}}"

      ## Build dockerfile ##
      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag ${{ github.event.repository.name }}:${{fromJson(steps.json_properties.outputs.packageJson).version}}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.MY_DOCKER_USERNAME }}
          password: ${{ secrets.MY_DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: pongu/${{ github.event.repository.name }}:${{fromJson(steps.json_properties.outputs.packageJson).version}}

      - run: echo "üçè This job's status is ${{ job.status }}."
